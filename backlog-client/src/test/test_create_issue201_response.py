# coding: utf-8

"""
    Backlog API

    Backlog REST API specification

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from backlog_client.models.create_issue201_response import CreateIssue201Response

class TestCreateIssue201Response(unittest.TestCase):
    """CreateIssue201Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateIssue201Response:
        """Test CreateIssue201Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateIssue201Response`
        """
        model = CreateIssue201Response()
        if include_optional:
            return CreateIssue201Response(
                id = 56,
                project_id = 56,
                issue_key = '',
                key_id = 56,
                issue_type = backlog_client.models.get_issue_200_response_issue_type.getIssue_200_response_issueType(
                    id = 56, 
                    project_id = 56, 
                    name = '', 
                    color = '', 
                    display_order = 56, ),
                summary = '',
                description = '',
                resolution = None,
                priority = backlog_client.models.get_issue_200_response_priority.getIssue_200_response_priority(
                    id = 56, 
                    name = '', ),
                status = backlog_client.models.get_issue_200_response_issue_type.getIssue_200_response_issueType(
                    id = 56, 
                    project_id = 56, 
                    name = '', 
                    color = '', 
                    display_order = 56, ),
                assignee = backlog_client.models.create_issue_201_response_assignee.createIssue_201_response_assignee(
                    id = 56, 
                    user_id = '', 
                    name = '', 
                    role_type = 56, ),
                category = [
                    None
                    ],
                versions = [
                    None
                    ],
                milestone = [
                    backlog_client.models.get_issue_200_response_milestone_inner.getIssue_200_response_milestone_inner(
                        id = 56, 
                        project_id = 56, 
                        name = '', 
                        description = '', 
                        start_date = '', 
                        release_due_date = '', 
                        archived = True, 
                        display_order = 56, )
                    ],
                start_date = '',
                due_date = '',
                estimated_hours = 1.337,
                actual_hours = 1.337,
                parent_issue_id = 56,
                custom_fields = [
                    None
                    ],
                attachments = [
                    backlog_client.models.get_issue_200_response_attachments_inner.getIssue_200_response_attachments_inner(
                        id = 56, 
                        name = '', 
                        size = 56, )
                    ],
                shared_files = [
                    None
                    ],
                stars = [
                    None
                    ]
            )
        else:
            return CreateIssue201Response(
        )
        """

    def testCreateIssue201Response(self):
        """Test CreateIssue201Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
