# coding: utf-8

"""
    Backlog API

    Backlog REST API specification

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from backlog_client.models.get_issue_comment_notifications200_response_inner_user import GetIssueCommentNotifications200ResponseInnerUser

class TestGetIssueCommentNotifications200ResponseInnerUser(unittest.TestCase):
    """GetIssueCommentNotifications200ResponseInnerUser unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetIssueCommentNotifications200ResponseInnerUser:
        """Test GetIssueCommentNotifications200ResponseInnerUser
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetIssueCommentNotifications200ResponseInnerUser`
        """
        model = GetIssueCommentNotifications200ResponseInnerUser()
        if include_optional:
            return GetIssueCommentNotifications200ResponseInnerUser(
                id = 56,
                user_id = '',
                name = '',
                role_type = 56,
                lang = '',
                nulab_account = backlog_client.models.get_issue_comment_notifications_200_response_inner_user_nulab_account.getIssueCommentNotifications_200_response_inner_user_nulabAccount(
                    nulab_id = '', 
                    name = '', 
                    unique_id = '', ),
                mail_address = '',
                last_login_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return GetIssueCommentNotifications200ResponseInnerUser(
        )
        """

    def testGetIssueCommentNotifications200ResponseInnerUser(self):
        """Test GetIssueCommentNotifications200ResponseInnerUser"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
