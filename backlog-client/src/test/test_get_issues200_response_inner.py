# coding: utf-8

"""
    Backlog API

    Backlog REST API specification

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from backlog_client.models.get_issues200_response_inner import GetIssues200ResponseInner

class TestGetIssues200ResponseInner(unittest.TestCase):
    """GetIssues200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetIssues200ResponseInner:
        """Test GetIssues200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetIssues200ResponseInner`
        """
        model = GetIssues200ResponseInner()
        if include_optional:
            return GetIssues200ResponseInner(
                id = 56,
                project_id = 56,
                issue_key = '',
                key_id = 56,
                issue_type = backlog_client.models.get_issue_200_response_issue_type.getIssue_200_response_issueType(
                    id = 56, 
                    project_id = 56, 
                    name = '', 
                    color = '', 
                    display_order = 56, ),
                summary = '',
                description = '',
                resolution = None,
                priority = backlog_client.models.get_issue_200_response_priority.getIssue_200_response_priority(
                    id = 56, 
                    name = '', ),
                status = backlog_client.models.get_issue_200_response_issue_type.getIssue_200_response_issueType(
                    id = 56, 
                    project_id = 56, 
                    name = '', 
                    color = '', 
                    display_order = 56, ),
                assignee = backlog_client.models.create_pull_request_200_response_assignee.createPullRequest_200_response_assignee(
                    id = 56, 
                    user_id = '', 
                    name = '', 
                    role_type = 56, 
                    lang = '', ),
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                due_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                estimated_hours = 1.337,
                actual_hours = 1.337,
                parent_issue_id = 56,
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return GetIssues200ResponseInner(
        )
        """

    def testGetIssues200ResponseInner(self):
        """Test GetIssues200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
